/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-04-30 14:31:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.nagarro.entities.*;
import com.nagarro.enums.*;
import org.hibernate.cfg.Configuration;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import javax.servlet.http.HttpSession;
import org.hibernate.query.Query;
import java.util.*;
import java.io.*;
import java.sql.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/aniketkumar01/Desktop/aniket-kumar/Week8/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Advance_Java_Assignment_4/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153365282000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1682334597904L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("com.nagarro.enums");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("com.nagarro.entities");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("javax.servlet.http.HttpSession");
    _jspx_imports_classes.add("org.hibernate.SessionFactory");
    _jspx_imports_classes.add("org.hibernate.query.Query");
    _jspx_imports_classes.add("org.hibernate.Session");
    _jspx_imports_classes.add("org.hibernate.cfg.Configuration");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Home</title>\r\n");
      out.write("\r\n");
      out.write("<!-- Bootstrap CSS -->\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("#not-found-msg {\r\n");
      out.write("	display: block;\r\n");
      out.write("	width: 35%;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	color: red;\r\n");
      out.write("	font-size: 24px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!-- to prevent access before login and to prevent going back after logout-->\r\n");
      out.write("	");

		response.setHeader("Cache-Control", "no-cache,no-store,must-revalidate");
		response.setHeader("Pragma", "no-cache");
		response.setHeader("Expires", "0");
		if (session.getAttribute("username") == null)
			response.sendRedirect("login.jsp");
	
      out.write("\r\n");
      out.write("	<div class=\"container-fluid\">\r\n");
      out.write("		<div\r\n");
      out.write("			class=\"fixed-header d-flex justify-content-between align-items-center bg-dark text-light p-3\">\r\n");
      out.write("			<div class=\"text-center\">\r\n");
      out.write("				<h2>\r\n");
      out.write("					<b>Search Your Favorite T-shirts</b>\r\n");
      out.write("				</h2>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"text-right\">\r\n");
      out.write("				<form action=\"Logout\" method=\"post\">\r\n");
      out.write("					Hi\r\n");
      out.write("					");
      out.print(session.getAttribute("username"));
      out.write("&nbsp;&nbsp; <input\r\n");
      out.write("						type=\"submit\" class=\"btn btn-danger\" value=\"Logout\">\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"row justify-content-center mt-5\">\r\n");
      out.write("			<div class=\"main-content col-md-6 mt-4 p-4 rounded shadow-lg\">\r\n");
      out.write("				<form action=\"Search\" method=\"post\">\r\n");
      out.write("					<div class=\"form-group row\">\r\n");
      out.write("						<label for=\"Color\"\r\n");
      out.write("							class=\"col-md-2 col-form-label text-md-end font-weight-bold\">Color:</label>\r\n");
      out.write("						<div class=\"col-md-8\">\r\n");
      out.write("							<input type=\"text\" class=\"form-control\" id=\"Color\" name=\"colour\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"form-group row\">\r\n");
      out.write("						<fieldset class=\"row mb-3\">\r\n");
      out.write("							<legend class=\"col-md-2 col-form-label pt-0 font-weight-bold\"\r\n");
      out.write("								style=\"margin-left: 1.3rem;\">Size:</legend>\r\n");
      out.write("							<div class=\"col-md-8\" style=\"margin-left: 1.5rem;\">\r\n");
      out.write("								<div class=\"form-check form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"size\" id=\"S\"\r\n");
      out.write("										value=\"S\" checked> <label class=\"form-check-label\"\r\n");
      out.write("										for=\"S\" style=\"font-weight: bold;\">S</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"size\" id=\"M\"\r\n");
      out.write("										value=\"M\"> <label class=\"form-check-label\" for=\"M\"\r\n");
      out.write("										style=\"font-weight: bold;\">M</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"size\" id=\"L\"\r\n");
      out.write("										value=\"L\"> <label class=\"form-check-label\" for=\"L\"\r\n");
      out.write("										style=\"font-weight: bold;\">L</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"size\"\r\n");
      out.write("										id=\"XL\" value=\"XL\"> <label class=\"form-check-label\"\r\n");
      out.write("										for=\"XL\" style=\"font-weight: bold;\">XL</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"size\"\r\n");
      out.write("										id=\"XXL\" value=\"XXL\"> <label class=\"form-check-label\"\r\n");
      out.write("										for=\"XXL\" style=\"font-weight: bold;\">XXL</label>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</fieldset>\r\n");
      out.write("\r\n");
      out.write("						<fieldset class=\"row mb-3\">\r\n");
      out.write("							<legend class=\"col-form-label col-2 pt-0 mx-4 font-weight-bold\">Gender:</legend>\r\n");
      out.write("							<div class=\"col-sm-8\">\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("										id=\"MaleGender\" value=\"M\" checked> <label\r\n");
      out.write("										class=\"form-check-label\" for=\"MaleGender\">M</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("										id=\"FemaleGender\" value=\"F\"> <label\r\n");
      out.write("										class=\"form-check-label\" for=\"FemaleGender\">F</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\" name=\"gender\"\r\n");
      out.write("										id=\"OtherGender\" value=\"U\"> <label\r\n");
      out.write("										class=\"form-check-label\" for=\"OtherGender\">U</label>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</fieldset>\r\n");
      out.write("\r\n");
      out.write("						<fieldset class=\"row mb-3\">\r\n");
      out.write("							<legend class=\"col-form-label col-2 pt-0 mx-4 font-weight-bold\">Output\r\n");
      out.write("								Preference</legend>\r\n");
      out.write("							<div class=\"col-sm-8\">\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("										name=\"outputPreference\" id=\"PriceRadio\" value=\"1\" checked>\r\n");
      out.write("									<label class=\"form-check-label\" for=\"PriceRadio\">Price</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("										name=\"outputPreference\" id=\"RatingRadio\" value=\"2\"> <label\r\n");
      out.write("										class=\"form-check-label\" for=\"RatingRadio\">Rating</label>\r\n");
      out.write("								</div>\r\n");
      out.write("								<div class=\"form-check-inline\">\r\n");
      out.write("									<input class=\"form-check-input\" type=\"radio\"\r\n");
      out.write("										name=\"outputPreference\" id=\"BothRadio\" value=\"3\"> <label\r\n");
      out.write("										class=\"form-check-label\" for=\"BothRadio\">Both</label>\r\n");
      out.write("								</div>\r\n");
      out.write("							</div>\r\n");
      out.write("						</fieldset>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"col-12\">\r\n");
      out.write("						<!-- <input type=\"submit\" value=\"Search\" id=\"btn\"> -->\r\n");
      out.write("						<input type=\"submit\" class=\"btn btn-danger\" value=\"Search\">\r\n");
      out.write("\r\n");
      out.write("					</div>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<br> <br>\r\n");
      out.write("\r\n");
      out.write("		<!-- table creation -->\r\n");
      out.write("		<table class=\"table table-bordered\" id=\"tshirtTable\">\r\n");
      out.write("			");
      //  c:if
      org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
      boolean _jspx_th_c_005fif_005f0_reused = false;
      try {
        _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
        _jspx_th_c_005fif_005f0.setParent(null);
        // /home.jsp(165,3) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
        _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty tshirts}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
        int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
        if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("				");

					List<Tshirt> tshirts = (List<Tshirt>) session.getAttribute("tshirts");
						if (tshirts != null && tshirts.size() != 0) {
				
            out.write("\r\n");
            out.write("				<thead>\r\n");
            out.write("					<tr>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">S.No</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Id</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Name</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Color</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Gender</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Size</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Price</th>\r\n");
            out.write("						<th scope=\"col\" class=\"text-center\">Rating</th>\r\n");
            out.write("					</tr>\r\n");
            out.write("				</thead>\r\n");
            out.write("				<tbody>\r\n");
            out.write("\r\n");
            out.write("					<!--display data from database -->\r\n");
            out.write("					");

						int i = 1;
								for (Tshirt tshirt : tshirts) {
					
            out.write("\r\n");
            out.write("					<tr>\r\n");
            out.write("						<th scope=\"row\"\r\n");
            out.write("							style=\"text-align: center; vertical-align: middle;\">");
            out.print(i++);
            out.write("</th>\r\n");
            out.write("\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getId());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getName());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getColor());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getGender());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getSize());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getPrice());
            out.write("</td>\r\n");
            out.write("						<td style=\"text-align: center; vertical-align: middle;\">");
            out.print(tshirt.getRating());
            out.write("</td>\r\n");
            out.write("					</tr>\r\n");
            out.write("					");

						}
							}
					
            out.write("\r\n");
            out.write("				\r\n");
            out.write("			");
            int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return;
        }
        _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
        _jspx_th_c_005fif_005f0_reused = true;
      } finally {
        org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
      }
      out.write("\r\n");
      out.write("			</tbody>\r\n");
      out.write("		</table>\r\n");
      out.write("		");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	<script>\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /home.jsp(209,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty tshirts}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<div id=\"not-found-msg\">\r\n");
          out.write("				<p>T-shirt not Available. Find Other Tshirts</p>\r\n");
          out.write("			</div>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
