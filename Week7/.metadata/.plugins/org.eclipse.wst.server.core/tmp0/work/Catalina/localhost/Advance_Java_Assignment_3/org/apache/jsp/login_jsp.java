/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-08 16:34:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<title>Login: Nagarro</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\"\r\n");
      out.write("	rel=\"stylesheet\"\r\n");
      out.write("	integrity=\"sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<style>\r\n");
      out.write(".background {\r\n");
      out.write("	background-color: #BCD4E6;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".color {\r\n");
      out.write("	color: #00308F;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".space {\r\n");
      out.write("	margin-left: 22%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".formBackground {\r\n");
      out.write("	background-color: #C6E6FB;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".height {\r\n");
      out.write("	height: 80%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".wid {\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	margin-left: 90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".error-message {\r\n");
      out.write("	color: red;\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".required-field::before {\r\n");
      out.write("	content: \"*\";\r\n");
      out.write("	color: red;\r\n");
      out.write("	margin-left: 200px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");

		response.setHeader("Cache-Control", "no-cache,no-store,must-revalidate");
		response.setHeader("Pragma", "no-cache");
		response.setHeader("Expires", "0");
	
      out.write("\r\n");
      out.write("	<form action=\"Login\" method=\"post\" onsubmit=\"return validateForm()\">\r\n");
      out.write("		<div class=\"fw-bolder fs-2 background color \">\r\n");
      out.write("			<!-- <hr/> -->\r\n");
      out.write("			<p class=\"mx-3\">Login</p>\r\n");
      out.write("			<hr />\r\n");
      out.write("		</div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div class=\"d-flex mb-4\">\r\n");
      out.write("				<p class=\"ms-4 fw-bolder fs-5\">Username</p>\r\n");
      out.write("				<p class=\"required-field\">\r\n");
      out.write("					<input type=\"text\" name=\"uname\" id=\"uname\" class=\" margins height\">\r\n");
      out.write("					<span id=\"unameError\" class=\"error-message\"></span>\r\n");
      out.write("					");

						if (request.getAttribute("errorMessage") != null) {
					
      out.write("\r\n");
      out.write("					<span id=\"loginError\" class=\"error-message\"> ");
      out.print(request.getAttribute("errorMessage"));
      out.write("\r\n");
      out.write("					</span>\r\n");
      out.write("					");

						}
					
      out.write("\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div class=\"d-flex mb-4\">\r\n");
      out.write("				<p class=\"ms-4 fw-bolder fs-5 height\">Password&nbsp;</p>\r\n");
      out.write("				<p class=\"required-field\">\r\n");
      out.write("					<input type=\"password\" name=\"pass\" id=\"pass\"\r\n");
      out.write("						class=\" margins height\"> <span id=\"passError\"\r\n");
      out.write("						class=\"error-message\"></span>\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<a href=\"ForgetPassword.jsp\" class=\"space\"> Forgotten Your\r\n");
      out.write("				Password? </a> <br /> <br /> <a href=\"register.jsp\" class=\"space\">\r\n");
      out.write("				New user? </a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"background \">\r\n");
      out.write("			<hr />\r\n");
      out.write("			<button type=\"submit\"\r\n");
      out.write("				class=\"wid border border-dark fw-bold border-2 rounded\">Login\r\n");
      out.write("				&gt;&gt;</button>\r\n");
      out.write("			<hr />\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("		integrity=\"sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("		function validateForm() {\r\n");
      out.write("			resetErrorMessage();\r\n");
      out.write("			// Get form inputs\r\n");
      out.write("			var uname = document.getElementById(\"uname\").value;\r\n");
      out.write("			var pass = document.getElementById(\"pass\").value;\r\n");
      out.write("\r\n");
      out.write("			// Validate username\r\n");
      out.write("			if (uname === \"\") {\r\n");
      out.write("				document.getElementById(\"unameError\").innerHTML = \"Please enter a username\";\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				document.getElementById(\"unameError\").innerHTML = \"\";\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			// Validate password\r\n");
      out.write("			if (pass === \"\") {\r\n");
      out.write("				document.getElementById(\"passError\").innerHTML = \"Please enter a password\";\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				document.getElementById(\"passError\").innerHTML = \"\";\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			var loginError = document.getElementById(\"loginError\").textContent;\r\n");
      out.write("			if (loginError.trim() !== \"\") {\r\n");
      out.write("				return false;\r\n");
      out.write("			} else {\r\n");
      out.write("				resetErrorMessage();\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("			// If both inputs are valid, submit the form\r\n");
      out.write("			return true;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		function resetErrorMessage() {\r\n");
      out.write("			document.getElementById(\"loginError\").innerHTML = \"\";\r\n");
      out.write("		}\r\n");
      out.write("	</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
